# Takedown test (preview) website when the PR is closed
name: Test teardown

on:
  pull_request:
    types: [closed]
    branches:
      - main

env:
  DOCUSAURUS_URL: https://pr-${{ github.event.number }}-pm4h-docs-sabienupv.surge.sh

jobs:
  teardown:
    name: Teardown preview website

    # Create a deployment to the staging environment
    # so that the teardown process is shown in the PR
    environment:
      name: staging

    runs-on: ubuntu-latest
    steps:
      # We need to checkout the code again to get the package-lock.json file,
      # which is used to be able to reuse cached dependencies by npm in previous runs
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Teardown preview website
        run: npx --yes surge teardown ${{ env.DOCUSAURUS_URL }}
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Add comment to PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const success = '${{ job.status }}' === 'success';
            const actionUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const body = success ? '‚úÖüóëÔ∏è Preview Website has been torn down. It is no longer available. Re-open the pull request to re-deploy it.' : `‚ùåüóëÔ∏è Preview Website failed to be torn down.\nYou will need to tear it down manually or re-run the job.\nIf you don't, the preview website will still be available until you do.\n(Note: If you re-open the PR, the preview website will be re-deployed in the same location, overwriting the previous one, so you should not need to worry about having multiple instances)\n\nCheck the GitHub action for details: ${actionUrl}`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  delete-previous-deployments:
    name: Delete previous deployments
    needs: teardown
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: 'staging',
              ref: context.payload.pull_request.head.ref
            });
            for (const deployment of deployments.data) {
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: 'inactive'
              });
              await github.rest.repos.deleteDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id
              });
            }
