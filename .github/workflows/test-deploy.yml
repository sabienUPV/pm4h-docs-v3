name: Build and Deploy Preview Website to Surge

on:
  pull_request:
    branches:
      - main
    # Review gh actions docs if you want to further define triggers, paths, etc
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on

# Prevent multiple deployments from running concurrently
# (https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#concurrency)
concurrency:
  group: staging-ci-${{ github.ref }}

env:
  DOCUSAURUS_URL: https://pr-${{ github.event.number }}-pm4h-docs-sabienupv.surge.sh
  DOCUSAURUS_BASE_URL: /

jobs:
  test-build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci
      - name: Test build website
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./build

  test-deploy:
    name: Deploy Preview to Surge
    needs: test-build

    # Deploy to the staging environment
    environment:
      name: staging
      url: ${{ env.DOCUSAURUS_URL }}

    runs-on: ubuntu-latest
    steps:
      # We need to checkout the code again to get the package-lock.json file,
      # which is used to be able to reuse cached dependencies by npm in previous runs
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./build

      - name: Deploy Preview
        run: npx --yes surge ./build --domain ${{ env.DOCUSAURUS_URL }}
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Add comment to PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const success = '${{ job.status }}' === 'success';
            const actionUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const body = success ? '‚úÖüöÄ Preview Website deployed at: ${{ env.DOCUSAURUS_URL }}' : `‚ùåüöÄ Preview Website failed to deploy. Check the GitHub action for details: ${actionUrl}`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })