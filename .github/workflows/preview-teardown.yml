name: Teardown Preview Website from Surge

on:
  pull_request:
    types: [closed]
    branches:
      - main

env:
  DOCUSAURUS_URL: https://pr-${{ github.event.number }}-pm4h-docs-sabienupv.surge.sh

jobs:
  teardown:
    name: Teardown preview website

    # Create a deployment to the staging environment
    # so that the teardown process is shown in the PR
    environment:
      name: staging

    runs-on: ubuntu-latest
    steps:
      # We need to checkout the code again to get the package-lock.json file,
      # which is used to be able to reuse cached dependencies by npm in previous runs
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Teardown preview website
        run: npx --yes surge teardown ${{ env.DOCUSAURUS_URL }}
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Remove preview label from PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              name: 'preview',
              owner: context.repo.owner,
              repo: context.repo.repo
            });

      - name: Add comment to PR
        uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            const actionUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const body = `
            ### ‚ùåüóëÔ∏è Preview Website Teardown Failed

            The preview website **failed to be torn down**. Please take one of the following actions:

            1. **Re-run the job** to attempt the teardown again.
            2. **Manually tear down** the preview site
              - Command: \`surge teardown ${{ env.DOCUSAURUS_URL }}\`
              - You need to have the [Surge CLI](https://surge.sh/help/getting-started-with-surge) installed,
                and you need to be logged in with the same account used to deploy the preview site.

            If neither action is taken, the preview site will remain available until one of the above steps is completed.

            **Note:** If you re-open the PR, the preview site will be re-deployed in the same location, overwriting the previous deployment. This means you shouldn't have to worry about multiple instances.

            For more details, please check the [GitHub Action log](${actionUrl}).
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  delete-previous-deployments:
    name: Delete previous deployments
    needs: teardown
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: 'staging',
              ref: context.payload.pull_request.head.ref
            });
            for (const deployment of deployments.data) {
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: 'inactive'
              });
              await github.rest.repos.deleteDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id
              });
            }
